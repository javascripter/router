"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3401],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(n),h=o,d=m["".concat(s,".").concat(h)]||m[h]||p[h]||a;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6494:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={title:"Themes"},i=void 0,c={unversionedId:"migration/react-navigation/themes",id:"migration/react-navigation/themes",title:"Themes",description:"In React Navigation, you set the theme for the entire app using the ` component. Expo Router manages the root container for you, so instead you should set the theme using the ThemeProvider` directly.",source:"@site/docs/migration/react-navigation/themes.md",sourceDirName:"migration/react-navigation",slug:"/migration/react-navigation/themes",permalink:"/router/docs/migration/react-navigation/themes",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/migration/react-navigation/themes.md",tags:[],version:"current",frontMatter:{title:"Themes"},sidebar:"tutorialSidebar",previous:{title:"Stack",permalink:"/router/docs/migration/react-navigation/stack"},next:{title:"useLinkTo",permalink:"/router/docs/migration/react-navigation/use-link-to"}},s={},u=[],l={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In React Navigation, you set the theme for the entire app using the ",(0,o.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/navigation-container/#theme"},(0,o.kt)("inlineCode",{parentName:"a"},"<NavigationContainer />"))," component. Expo Router manages the root container for you, so instead you should set the theme using the ",(0,o.kt)("inlineCode",{parentName:"p"},"ThemeProvider")," directly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/_layout.tsx",title:"app/_layout.tsx"},"\nimport {\n  ThemeProvider,\n  DarkTheme,\n  DefaultTheme,\n  useTheme,\n} from \"@react-navigation/native\";\n\nimport { Slot } from 'expo-router';\n\nexport default function RootLayout() {\n    return (\n        {/* All layouts inside this provider will use the dark theme. */}\n        // highlight-next-line\n        <ThemeProvider value={DarkTheme}>\n            <Slot />\n        </ThemeProvider>\n    );\n}\n")),(0,o.kt)("p",null,"You can use this technique at any layer of the app to set the theme for a specific layout. The current theme can be accessed with ",(0,o.kt)("inlineCode",{parentName:"p"},"useTheme")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"@react-navigation/native"),"."))}p.isMDXComponent=!0}}]);