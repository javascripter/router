"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3051],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),g=r,f=m["".concat(s,".").concat(g)]||m[g]||u[g]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1908:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const i={title:"Screen tracking for analytics"},o=void 0,c={unversionedId:"migration/react-navigation/screen-tracking",id:"migration/react-navigation/screen-tracking",title:"Screen tracking for analytics",description:"Unlike React Navigation, Expo Router always has access to a URL. This means screen tracking is as easy as the web.",source:"@site/docs/migration/react-navigation/screen-tracking.md",sourceDirName:"migration/react-navigation",slug:"/migration/react-navigation/screen-tracking",permalink:"/router/docs/migration/react-navigation/screen-tracking",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/migration/react-navigation/screen-tracking.md",tags:[],version:"current",frontMatter:{title:"Screen tracking for analytics"},sidebar:"tutorialSidebar",previous:{title:"Navigation State",permalink:"/router/docs/migration/react-navigation/navigation-state"},next:{title:"Screen",permalink:"/router/docs/migration/react-navigation/screen"}},s={},l=[{value:"Migrating from React Navigation",id:"migrating-from-react-navigation",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Unlike React Navigation, Expo Router always has access to a URL. This means screen tracking is as easy as the web."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a higher-order component that observes the currently selected URL"),(0,r.kt)("li",{parentName:"ol"},"Track the URL in your analytics provider")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  _layout.js # This Layout wraps all other routes\n  ...\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/_layout.js",title:"app/_layout.js"},'import { useEffect } from "react";\nimport { usePathname, useGlobalSearchParams, Slot } from "expo-router";\n\nexport default function Layout() {\n  const pathname = usePathname();\n  const params = useGlobalSearchParams();\n\n  // Track the location in your analytics provider here.\n  useEffect(() => {\n    analytics.track({ pathname, params });\n  }, [pathname, params]);\n\n  // Export all the children routes in the most basic way.\n  return <Slot />;\n}\n')),(0,r.kt)("p",null,"Now when the user changes routes, the analytics provider will be notified."),(0,r.kt)("h2",{id:"migrating-from-react-navigation"},"Migrating from React Navigation"),(0,r.kt)("p",null,"React Navigation's ",(0,r.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/screen-tracking/"},"screen tracking guide")," cannot make the same assumptions about the navigation state that Expo Router can. As a result, the implementation requires the use of ",(0,r.kt)("inlineCode",{parentName:"p"},"onReady")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"onStateChange")," callbacks. Avoid using these methods if possible as the root ",(0,r.kt)("inlineCode",{parentName:"p"},"<NavigationContainer />")," is not directly exposed and allows cascading in Expo Router."))}u.isMDXComponent=!0}}]);