"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2202],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),h=c(n),d=o,g=h["".concat(u,".").concat(d)]||h[d]||p[d]||i;return n?r.createElement(g,a(a({ref:t},l),{},{components:n})):r.createElement(g,a({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=h;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1725:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={title:"Authentication"},a=void 0,s={unversionedId:"guides/auth",id:"guides/auth",title:"Authentication",description:"It's common to restrict certain routes to users who are not authenticated. This can be achieved in a very organized way by using React Context and Route Groups.",source:"@site/docs/guides/auth.md",sourceDirName:"guides",slug:"/guides/auth",permalink:"/router/docs/guides/auth",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/guides/auth.md",tags:[],version:"current",frontMatter:{title:"Authentication"},sidebar:"tutorialSidebar",previous:{title:"Nesting navigators",permalink:"/router/docs/guides/nesting-navigators"},next:{title:"Hosting",permalink:"/router/docs/guides/hosting"}},u={},c=[],l={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"It's common to restrict certain routes to users who are not authenticated. This can be achieved in a very organized way by using React Context and Route Groups."),(0,o.kt)("p",null,"Consider the following project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  _layout.js\n  index.js\n  (auth)/\n    sign-in.js\n")),(0,o.kt)("p",null,"First, we'll setup a ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/context.html"},"React Context provider")," that we can use to protect routes. This provider will use a mock implementation, you can replace it with your own ",(0,o.kt)("a",{parentName:"p",href:"https://docs.expo.dev/guides/authentication/"},"authentication provider"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=context/auth.js",title:"context/auth.js"},'import { useRouter, useSegments } from "expo-router";\nimport React from "react";\n\nconst AuthContext = React.createContext(null);\n\n// This hook can be used to access the user info.\nexport function useAuth() {\n  return React.useContext(AuthContext);\n}\n\n// This hook will protect the route access based on user authentication.\nfunction useProtectedRoute(user) {\n  const segments = useSegments();\n  const router = useRouter();\n\n  React.useEffect(() => {\n    const inAuthGroup = segments[0] === "(auth)";\n\n    if (\n      // If the user is not signed in and the initial segment is not anything in the auth group.\n      !user &&\n      !inAuthGroup\n    ) {\n      // Redirect to the sign-in page.\n      router.replace("/sign-in");\n    } else if (user && inAuthGroup) {\n      // Redirect away from the sign-in page.\n      router.replace("/");\n    }\n  }, [user, segments]);\n}\n\nexport function Provider(props) {\n  const [user, setAuth] = React.useState(null);\n\n  useProtectedRoute(user);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        signIn: () => setAuth({}),\n        signOut: () => setAuth(null),\n        user,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n')),(0,o.kt)("p",null,"Now we can use this context to control the access to the routes, we'll do this by using a Layout Route that wraps all the screens which require authentication."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/_layout.js",title:"app/_layout.js"},'import { Slot } from "expo-router";\nimport { Provider } from "../context/auth";\n\nexport default function Root() {\n  return (\n    // Setup the auth context and render our layout inside of it.\n    <Provider>\n      <Slot />\n    </Provider>\n  );\n}\n')),(0,o.kt)("p",null,"Now we can create our ",(0,o.kt)("inlineCode",{parentName:"p"},"(auth)")," group which is unprotected, this screen can toggle the authentication using ",(0,o.kt)("inlineCode",{parentName:"p"},"signIn()"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/(auth)/sign-in.js",title:"app/(auth)/sign-in.js"},'import { Text, View } from "react-native";\nimport { useAuth } from "../../context/auth";\n\nexport default function SignIn() {\n  const { signIn } = useAuth();\n  return (\n    <View style={{ flex: 1, justifyContent: "center", alignItems: "center" }}>\n      <Text onPress={() => signIn()}>Sign In</Text>\n    </View>\n  );\n}\n')),(0,o.kt)("p",null,"And finally we'll implement an authenticated screen which can sign out."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/index.js",title:"app/index.js"},'import { Text, View } from "react-native";\n\nimport { useAuth } from "../context/auth";\n\nexport default function Index() {\n  const { signOut } = useAuth();\n  return (\n    <View style={{ flex: 1, justifyContent: "center", alignItems: "center" }}>\n      <Text onPress={() => signOut()}>Sign Out</Text>\n    </View>\n  );\n}\n')),(0,o.kt)("p",null,"Now if the authentication state changes globally, the user will be redirected to the appropriate route."))}p.isMDXComponent=!0}}]);