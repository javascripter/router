"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1156],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(r),g=a,d=m["".concat(p,".").concat(g)]||m[g]||u[g]||o;return r?n.createElement(d,i(i({ref:t},l),{},{components:r})):n.createElement(d,i({ref:t},l))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2735:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={title:"Passing parameters to the routes",sidebar_position:4},i=void 0,s={unversionedId:"migration/react-navigation/params",id:"migration/react-navigation/params",title:"Passing parameters to the routes",description:"Ports the guide React Navigation: Params to Expo Router.",source:"@site/docs/migration/react-navigation/params.md",sourceDirName:"migration/react-navigation",slug:"/migration/react-navigation/params",permalink:"/router/docs/migration/react-navigation/params",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/migration/react-navigation/params.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Passing parameters to the routes",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Moving between screens",permalink:"/router/docs/migration/react-navigation/navigating"},next:{title:"Custom navigators",permalink:"/router/docs/migration/react-navigation/custom-navigators"}},p={},c=[{value:"Notes",id:"notes",level:2}],l={toc:c};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Ports the guide ",(0,a.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/params"},"React Navigation: Params")," to Expo Router."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  _layout.js\n  index.js\n  details.js\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/_layout.js",title:"app/_layout.js"},'import { Stack } from "expo-router";\n\nexport default function Layout() {\n  return <Stack />;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/index.js",title:"app/index.js"},'import { useLocalSearchParams } from "expo-router";\n\nimport { useEffect } from "react";\nimport { View, Text } from "react-native";\n\nexport default function Home() {\n  const { post } = useLocalSearchParams();\n\n  useEffect(() => {\n    if (post) {\n      // Post updated, do something with `post`\n      // For example, send the post to the server\n    }\n  }, [post]);\n\n  return (\n    <View style={{ flex: 1, alignItems: "center", justifyContent: "center" }}>\n      <Text>Home Screen</Text>\n      <Link\n        href={{\n          pathname: "/details",\n          // /* 1. Navigate to the details route with query params */\n          params: { id: 86, other: "anything you want here" },\n        }}\n      >\n        Go to Details\n      </Link>\n    </View>\n  );\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/details.js",title:"app/details.js"},'import { View, Text } from "react-native";\nimport { useNavigation, useRouter, useLocalSearchParams } from "expo-router";\n\nexport default function Details() {\n  const navigation = useNavigation();\n  const router = useRouter();\n  const params = useLocalSearchParams();\n  const { id = 42, other } = params;\n\n  return (\n    <View style={{ flex: 1, alignItems: "center", justifyContent: "center" }}>\n      <Text\n        onPress={() => {\n          router.push({ pathname: "/", params: { post: "random", id, other } });\n        }}\n      >\n        Go Home\n      </Text>\n    </View>\n  );\n}\n')),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Prefer static route support (ex: ",(0,a.kt)("inlineCode",{parentName:"li"},'href="/foo/bar?some=data"'),") to ",(0,a.kt)("a",{parentName:"li",href:"https://reactnavigation.org/docs/params#passing-params-to-nested-navigators"},"passing-params-to-nested-navigators")),(0,a.kt)("li",{parentName:"ul"},"Only serialized top level params are supported ",(0,a.kt)("a",{parentName:"li",href:"https://reactnavigation.org/docs/params#what-should-be-in-params"},"https://reactnavigation.org/docs/params#what-should-be-in-params"))))}u.isMDXComponent=!0}}]);