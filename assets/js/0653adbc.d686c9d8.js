"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2437],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>m});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),s=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(p.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},c=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(t),m=o,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return t?n.createElement(f,i(i({ref:r},u),{},{components:t})):n.createElement(f,i({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=c;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5395:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=t(7462),o=(t(7294),t(3905));const a={title:"Errors",sidebar_position:4},i=void 0,l={unversionedId:"features/errors",id:"features/errors",title:"Errors",description:"Expo Router enables fine-tuned error handling to enable a more opinionated data loading strategy in the future. You can export a nested ErrorBoundary component from any route to intercept and format component-level errors using React Error Boundaries:",source:"@site/docs/features/errors.md",sourceDirName:"features",slug:"/features/errors",permalink:"/router/docs/features/errors",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/features/errors.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Errors",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"404s",permalink:"/router/docs/features/unmatched"},next:{title:"Splash Screen",permalink:"/router/docs/features/splash"}},p={},s=[{value:"API",id:"api",level:2},{value:"<code>ErrorBoundaryProps</code>",id:"errorboundaryprops",level:3},{value:"<code>ErrorBoundary</code>",id:"errorboundary",level:3},{value:"TODO",id:"todo",level:2}],u={toc:s};function d(e){let{components:r,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(6526).Z,width:"1920",height:"1080"})),(0,o.kt)("p",null,"Expo Router enables fine-tuned error handling to enable a more opinionated data loading strategy in the future. You can export a nested ",(0,o.kt)("inlineCode",{parentName:"p"},"ErrorBoundary")," component from any route to intercept and format component-level errors using ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/error-boundaries.html"},"React Error Boundaries"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/home.tsx",title:"app/home.tsx"},"import { View, Text } from 'react-native';\n\n// highlight-next-line\nexport function ErrorBoundary(props: ErrorBoundaryProps) {\n  return (\n    <View style={{ flex: 1, backgroundColor: \"red\" }}>\n      <Text>{props.error.message}</Text>\n      <Text onPress={props.retry}>Try Again?</Text>\n    </View>\n  );\n}\n\nexport default function Page() { ... }\n")),(0,o.kt)("p",null,"When you export an ",(0,o.kt)("inlineCode",{parentName:"p"},"ErrorBoundary")," the route will be wrapped with a React Error Boundary effectively:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="virtual"',title:'"virtual"'},"function Route({ ErrorBoundary, Component }) {\n  return (\n    <Try catch={ErrorBoundary}>\n      <Component />\n    </Try>\n  );\n}\n")),(0,o.kt)("p",null,"When ",(0,o.kt)("inlineCode",{parentName:"p"},"ErrorBoundary")," is not present, the error will be thrown to the nearest parent ",(0,o.kt)("inlineCode",{parentName:"p"},"ErrorBoundary"),"."),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("h3",{id:"errorboundaryprops"},(0,o.kt)("inlineCode",{parentName:"h3"},"ErrorBoundaryProps")),(0,o.kt)("p",null,"Each ",(0,o.kt)("inlineCode",{parentName:"p"},"ErrorBoundary")," is passed the following props:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"error"),": ",(0,o.kt)("em",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"em"},"Error"))," The error that was thrown."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"retry"),": ",(0,o.kt)("em",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"em"},"() => Promise<void>"))," A function that will rerender the route component.")),(0,o.kt)("h3",{id:"errorboundary"},(0,o.kt)("inlineCode",{parentName:"h3"},"ErrorBoundary")),(0,o.kt)("p",null,"You can also use the default ",(0,o.kt)("inlineCode",{parentName:"p"},"ErrorBoundary")," component for a quick UI:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/home.tsx",title:"app/home.tsx"},'// Re-export the default UI\nexport { ErrorBoundary } from "expo-router";\n')),(0,o.kt)("h2",{id:"todo"},"TODO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Metro errors need to be symbolicated in order to show the correct file name and line number on web."),(0,o.kt)("li",{parentName:"ul"},"React Native LogBox needs to be presented less aggressively in order to develop with errors. Currently it shows for ",(0,o.kt)("inlineCode",{parentName:"li"},"console.error"),"s and ",(0,o.kt)("inlineCode",{parentName:"li"},"console.warn"),"s but it should ideally only show for uncaught errors.")))}d.isMDXComponent=!0},6526:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/error-boundary-d99f661bbd132adf639188b42a0eb368.png"}}]);